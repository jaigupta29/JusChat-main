def RatchetEncryptHE(state, plaintext, AD):
    state.CKs, mk = KDF_CK(state.CKs)
    header = HEADER(state.DHRs, state.PN, state.Ns)
    enc_header = HENCRYPT(state.HKs, header)
    state.Ns += 1
    return enc_header, ENCRYPT(mk, plaintext, CONCAT(AD, enc_header))

    def RatchetDecryptHE(state, enc_header, ciphertext, AD):
        plaintext = TrySkippedMessageKeysHE(state, enc_header, ciphertext, AD)
        if plaintext != None:
            return plaintext
        header, dh_ratchet = DecryptHeader(state, enc_header)
        if dh_ratchet:
            SkipMessageKeysHE(state, header.pn)
            DHRatchetHE(state, header)
        SkipMessageKeysHE(state, header.n)
        state.CKr, mk = KDF_CK(state.CKr)
        state.Nr += 1
        return DECRYPT(mk, ciphertext, CONCAT(AD, enc_header))

    def TrySkippedMessageKeysHE(state, enc_header, ciphertext, AD):
        for ((hk, n), mk) in state.MKSKIPPED.items():
            header = HDECRYPT(hk, enc_header)
            if header != None and header.n == n:
                del state.MKSKIPPED[hk, n]
                return DECRYPT(mk, ciphertext, CONCAT(AD, enc_header))
        return None

    def DecryptHeader(state, enc_header):
        header = HDECRYPT(state.HKr, enc_header)
        if header != None:
            return header, False
        header = HDECRYPT(state.NHKr, enc_header)
        if header != None:
            return header, True
        raise Error()

    def SkipMessageKeysHE(state, until):
        if state.Nr + MAX_SKIP < until:
            raise Error()
        if state.CKr != None:
            while state.Nr < until:
                state.CKr, mk = KDF_CK(state.CKr)
                state.MKSKIPPED[state.HKr, state.Nr] = mk
                state.Nr += 1

    def DHRatchetHE(state, header):
        state.PN = state.Ns
        state.Ns = 0
        state.Nr = 0
        state.HKs = state.NHKs
        state.HKr = state.NHKr
        state.DHRr = header.dh
        state.RK, state.CKr, state.NHKr = KDF_RK_HE(state.RK, DH(state.DHRs, state.DHRr))
        state.DHRs = GENERATE_DH()
        state.RK, state.CKs, state.NHKs = KDF_RK_HE(state.RK, DH(state.DHRs, state.DHRr))